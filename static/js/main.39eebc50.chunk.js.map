{"version":3,"sources":["components/Frame/Navigation.js","components/Frame/Frame.js","components/About/About.js","components/Experience/Experience.js","components/Projects/Projects.js","components/App.js","serviceWorker.js","index.js"],"names":["Navigation","props","useState","history","location","pathname","selected","setSelected","theme","useContext","ThemeContext","SideBar","onClick","animate","open","NavList","NavItem","to","Span","isSelected","about","includes","experience","projects","styled","div","p","speed","delay","endSpeed","span","primary","withRouter","PortfolioContext","useEffect","console","log","Layout","TopBar","RightBar","BottomBar","Canvas","sectionHelper","children","BackDrop","color","section","About","Experience","Projects","App","setOpen","exact","path","component","Boolean","window","hostname","match","secondary","portfolio","name","React","createContext","ReactDOM","render","Provider","value","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39eebc50.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ThemeContext } from \"../../index\";\r\n\r\nconst Navigation = props => {\r\n  const [selected, setSelected] = useState(props.history.location.pathname);\r\n  const theme = useContext(ThemeContext);\r\n\r\n  return (\r\n    <SideBar onClick={() => props.onClick()} animate={props.open} {...props}>\r\n      <NavList animate={props.open} {...props}>\r\n        {props.open && (\r\n          <>\r\n            <NavItem onClick={() => setSelected(\"/\")}>\r\n              <Link to=\"/\">\r\n                <Span isSelected={selected === \"/\"} {...theme.about}>\r\n                  About\r\n                </Span>\r\n              </Link>\r\n            </NavItem>\r\n            <NavItem onClick={() => setSelected(\"/experience\")}>\r\n              <Link to=\"/experience\">\r\n                <Span\r\n                  isSelected={selected.includes(\"/experience\")}\r\n                  {...theme.experience}\r\n                >\r\n                  Experience\r\n                </Span>\r\n              </Link>\r\n            </NavItem>\r\n            <NavItem onClick={() => setSelected(\"/projects\")}>\r\n              <Link to=\"/projects\">\r\n                <Span\r\n                  isSelected={selected.includes(\"/projects\")}\r\n                  {...theme.projects}\r\n                >\r\n                  Project\r\n                </Span>\r\n              </Link>\r\n            </NavItem>\r\n          </>\r\n        )}\r\n      </NavList>\r\n    </SideBar>\r\n  );\r\n};\r\nexport default Navigation;\r\n\r\nconst SideBar = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: ${p => (p.animate ? \" 80%\" : \"30px\")};\r\n  height: 100%;\r\n  background-color: white;\r\n  transition: ${p =>\r\n    p.animate\r\n      ? \"width \" + p.speed + \" \" + p.delay + \" ease-in\"\r\n      : \"width \" + p.endSpeed + \" ease-in\"};\r\n  &:hover {\r\n    width: ${p => !p.animate && \"50px\"};\r\n  }\r\n  z-index: 2;\r\n`;\r\n\r\nconst NavList = styled.div`\r\n  display: grid;\r\n  overflow: hidden;\r\n  grid-template-columns: 1fr;\r\n  position: relative;\r\n  width: ${p => (p.animate ? \"400px\" : \"0\")};\r\n  margin: 100px auto auto 100px;\r\n  transition: ${p =>\r\n    p.animate\r\n      ? \"width \" + p.speed + \" \" + p.delay + \" ease-in\"\r\n      : \"width \" + p.endSpeed + \"ease-in\"};\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst NavItem = styled.div``;\r\n\r\nconst Span = styled.span`\r\n  background: ${p => (p.isSelected ? p.primary : \"none\")};\r\n  padding: 0 1em;\r\n`;\r\n","import React, { useEffect, useContext, useDebugValue } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { withRouter } from \"react-router\";\r\nimport Navigation from \"./Navigation\";\r\nimport { ThemeContext, PortfolioContext } from \"../../index\";\r\n\r\nconst Frame = props => {\r\n  const ANIMATION_SPEED = \"0.3s\";\r\n  const ANIMATION_END_SPEED = \"0.2s\";\r\n  const ANIMATION_DELAY = \"0.1s\";\r\n  const theme = useContext(ThemeContext);\r\n  const portfolio = useContext(PortfolioContext);\r\n\r\n  useEffect(() => {\r\n    console.log(\"History Changed\", props.history);\r\n  }, [props.history]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Navigation\r\n        speed={ANIMATION_SPEED}\r\n        delay={ANIMATION_DELAY}\r\n        endSpeed={ANIMATION_END_SPEED}\r\n        {...props}\r\n      />\r\n      <TopBar\r\n        speed={ANIMATION_SPEED}\r\n        delay={ANIMATION_DELAY}\r\n        endSpeed={ANIMATION_END_SPEED}\r\n        animate={props.open}\r\n      ></TopBar>\r\n      <RightBar\r\n        speed={ANIMATION_SPEED}\r\n        delay={ANIMATION_DELAY}\r\n        endSpeed={ANIMATION_END_SPEED}\r\n        animate={props.open}\r\n      />\r\n      <BottomBar\r\n        speed={ANIMATION_SPEED}\r\n        delay={ANIMATION_DELAY}\r\n        endSpeed={ANIMATION_END_SPEED}\r\n        animate={props.open}\r\n      />\r\n      <Canvas\r\n        speed={ANIMATION_SPEED}\r\n        delay={ANIMATION_DELAY}\r\n        endSpeed={ANIMATION_END_SPEED}\r\n        animate={props.open}\r\n        {...theme[sectionHelper(props.history.location.pathname)]}\r\n      >\r\n        {props.children}\r\n      </Canvas>\r\n      <BackDrop />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default withRouter(Frame);\r\n\r\nconst Layout = styled.div``;\r\n\r\nconst TopBar = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: ${p => (p.animate ? \"100px\" : \"30px\")};\r\n  width: 100%\r\n  background-color: white;\r\n  transition: ${p =>\r\n    p.animate\r\n      ? \"height \" + p.speed + \" \" + p.delay + \" ease-in\"\r\n      : \"height \" + p.endSpeed + \" ease-in\"};\r\n  z-index: 3;\r\n  `;\r\n\r\nconst RightBar = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  width: ${p => (p.animate ? \"100px\" : \"30px\")};\r\n  background-color: white;\r\n  transition: ${p =>\r\n    p.animate\r\n      ? \"width \" + p.speed + \" \" + p.delay + \" ease-in\"\r\n      : \"width \" + p.endSpeed + \" ease-in\"};\r\n  z-index: 3;\r\n`;\r\n\r\nconst BottomBar = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n  height: ${p => (p.animate ? \"100px\" : \"30px\")};\r\n  transition: ${p =>\r\n    p.animate\r\n      ? \"height \" + p.speed + \" \" + p.delay + \" ease-in\"\r\n      : \"height \" + p.endSpeed + \" ease-in\"};\r\n  width: 100%;\r\n  background-color: white;\r\n  z-index: 3;\r\n`;\r\nconst Canvas = styled.div`\r\n  position: absolute;\r\n  background-color: ${p => p.primary};\r\n  top: 30px;\r\n  left: 30px;\r\n  height: calc(100% - 60px);\r\n  width: calc(100% - 60px);\r\n  z-index: 1;\r\n  transition: ${p =>\r\n    \"background-color \" + p.speed + \" \" + p.delay + \" ease-in\"};\r\n`;\r\n// ${p => (p.animate ? p.speed + \" \" + p.delay : p.endSpeed)} \" ease-in\";\r\n\r\nconst BackDrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-color: ${p => p.color || \"blue\"};\r\n  transition: background-color 1s ease-in;\r\n`;\r\n\r\nconst sectionHelper = section => {\r\n  switch (section) {\r\n    case \"/experience\":\r\n      return \"experience\";\r\n    case \"/projects\":\r\n      return \"projects\";\r\n    default:\r\n      return \"about\";\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst About = () => {\r\n  return <div>About</div>;\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Experience = () => {\r\n  return <div>Experience</div>;\r\n};\r\n\r\nexport default Experience;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Projects = () => {\r\n  return <div>Projects</div>;\r\n};\r\n\r\nexport default Projects;\r\n","import React, { useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Frame from \"./Frame/Frame\";\nimport About from \"./About/About\";\nimport Experience from \"./Experience/Experience\";\nimport Projects from \"./Projects/Projects\";\n\nconst App = () => {\n  const [open, setOpen] = useState(false);\n  return (\n    <Layout>\n      <Frame open={open} onClick={() => setOpen(!open)}>\n        <Route exact path=\"/\" component={About} />\n        <Route path=\"/experience\" component={Experience} />\n        <Route path=\"/projects\" component={Projects} />\n      </Frame>\n    </Layout>\n  );\n};\n\nexport default App;\n\nconst Layout = styled.div`\n  height: 100vh;\n  width: 100vw;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst theme = {\n  about: { primary: \"#ff5851\", secondary: \"#ff5851\" },\n  experience: { primary: \"#f3c130\", secondary: \"#f8f8f8\" },\n  projects: { primary: \"#414a6b\", secondary: \"#f8f8f8\" }\n};\n\nconst portfolio = {\n  name: \"rob\"\n};\n\nexport const ThemeContext = React.createContext(theme);\nexport const PortfolioContext = React.createContext(portfolio);\n\nReactDOM.render(\n  <PortfolioContext.Provider value={portfolio}>\n    <ThemeContext.Provider value={theme}>\n      <Router>\n        <App />\n      </Router>\n    </ThemeContext.Provider>\n  </PortfolioContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}