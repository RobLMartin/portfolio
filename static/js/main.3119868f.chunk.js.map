{"version":3,"sources":["components/Frame/Navigation.js","components/Frame/Frame.js","components/About/About.js","components/Experience/Experience.js","components/Projects/Projects.js","components/App.js","serviceWorker.js","index.js"],"names":["Navigation","props","useState","history","location","pathname","selected","setSelected","console","log","SidePanel","animate","open","SideBar","Icon","icon","faTimes","faBars","onClick","handleOpen","NavList","NavItem","StyledLink","to","Span","isSelected","section","includes","styled","div","p","theme","frame","primary","speed","delay","endSpeed","FontAwesomeIcon","span","font","Link","withRouter","useContext","PortfolioContext","useEffect","Layout","TopBar","RightBar","BottomBar","Canvas","children","BackDrop","base","About","Container","Experience","Projects","library","add","App","setOpen","exact","path","component","Boolean","window","hostname","match","portfolio","name","React","createContext","ReactDOM","render","Provider","value","about","secondary","experience","projects","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3119868f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars, faTimes } from \"@fortawesome/pro-light-svg-icons\";\r\nconst Navigation = props => {\r\n  const [selected, setSelected] = useState(props.history.location.pathname);\r\n  console.log(selected);\r\n  return (\r\n    <SidePanel animate={props.open} {...props}>\r\n      <SideBar animate={props.open}>\r\n        <Icon\r\n          icon={props.open ? faTimes : faBars}\r\n          onClick={props.handleOpen}\r\n        ></Icon>\r\n      </SideBar>\r\n      <NavList animate={props.open} {...props} onClick={props.handleOpen}>\r\n        {props.open && (\r\n          <>\r\n            <NavItem onClick={() => setSelected(\"/\")}>\r\n              <StyledLink to=\"/\">\r\n                <Span isSelected={selected === \"/\"} section=\"about\">\r\n                  About\r\n                </Span>\r\n              </StyledLink>\r\n            </NavItem>\r\n            <NavItem onClick={() => setSelected(\"/experience\")}>\r\n              <StyledLink to=\"/experience\">\r\n                <Span\r\n                  isSelected={selected.includes(\"/experience\")}\r\n                  section=\"experience\"\r\n                >\r\n                  Experience\r\n                </Span>\r\n              </StyledLink>\r\n            </NavItem>\r\n            <NavItem onClick={() => setSelected(\"/projects\")}>\r\n              <StyledLink to=\"/projects\">\r\n                <Span\r\n                  isSelected={selected.includes(\"/projects\")}\r\n                  section=\"projects\"\r\n                >\r\n                  Project\r\n                </Span>\r\n              </StyledLink>\r\n            </NavItem>\r\n          </>\r\n        )}\r\n      </NavList>\r\n    </SidePanel>\r\n  );\r\n};\r\nexport default Navigation;\r\n\r\nconst SidePanel = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: ${p => (p.animate ? \" 80%\" : \"30px\")};\r\n  height: 100%;\r\n  background-color: ${p => p.theme.frame.primary};\r\n  transition: ${p =>\r\n    p.animate\r\n      ? \"width \" + p.speed + \" \" + p.delay + \" cubic-bezier(1, 0, 0, 1)\"\r\n      : \"width \" + p.endSpeed + \" cubic-bezier(1, 0, 0, 1)\"};\r\n  z-index: 3;\r\n`;\r\n\r\nconst Icon = styled(FontAwesomeIcon)`\r\n  position: absolute;\r\n  height: 30px;\r\n  width: 30px;\r\n  left: 23px;\r\n  top: 50vh;\r\n  z-index: 5;\r\n  transition: width 0.3s ease-in;\r\n`;\r\n\r\nconst SideBar = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 30px;\r\n  height: 100%;\r\n  background-color: ${p => p.theme.frame.primary};\r\n  transition: width 0.3s ease-in;\r\n  z-index: 3;\r\n  &:hover {\r\n    width: 50px;\r\n  }\r\n  :after {\r\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n    opacity: 0;\r\n  }\r\n\r\n  &:hover ${Icon} {\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nconst NavList = styled.div`\r\n  display: grid;\r\n  overflow: hidden;\r\n  grid-template-columns: 1fr;\r\n  position: relative;\r\n  width: ${p => (p.animate ? \"400px\" : \"0\")};\r\n  margin: 100px auto auto 100px;\r\n  transition: ${p =>\r\n    p.animate\r\n      ? \"width \" + p.speed + \" \" + p.delay + \" cubic-bezier(1, 0, 0, 1)\"\r\n      : \"width \" + p.endSpeed + \"cubic-bezier(1, 0, 0, 1)\"};\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst NavItem = styled.div``;\r\n\r\nconst Span = styled.span`\r\n  background: ${p => (p.isSelected ? p.theme[p.section].primary : \"none\")};\r\n  color: ${p => p.theme.font};\r\n  padding: 0 1em;\r\n  font-size: 2rem;\r\n  &:hover {\r\n    opacity: 0.8;\r\n    color: ${p => p.theme.font};\r\n    background: ${p => p.theme[p.section].primary};\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: inherit;\r\n  color: inherit;\r\n`;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { withRouter } from \"react-router\";\r\nimport Navigation from \"./Navigation\";\r\nimport { PortfolioContext } from \"../../index\";\r\n\r\nconst Frame = props => {\r\n  const ANIMATION_SPEED = \"0.6s\";\r\n  const ANIMATION_END_SPEED = \"0.6s\";\r\n  const ANIMATION_DELAY = \"0.1s\";\r\n  const portfolio = useContext(PortfolioContext);\r\n  const [peek, setPeek] = useState(false);\r\n  const [section, setSection] = useState();\r\n  useEffect(() => {\r\n    console.log(\"History Changed\", props.history);\r\n  }, [props.history]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Navigation\r\n        speed={ANIMATION_SPEED}\r\n        delay={ANIMATION_DELAY}\r\n        endSpeed={ANIMATION_END_SPEED}\r\n        {...props}\r\n      />\r\n      <TopBar\r\n        speed={ANIMATION_SPEED}\r\n        delay={ANIMATION_DELAY}\r\n        endSpeed={ANIMATION_END_SPEED}\r\n        animate={props.open}\r\n      ></TopBar>\r\n      <RightBar\r\n        speed={ANIMATION_SPEED}\r\n        delay={ANIMATION_DELAY}\r\n        endSpeed={ANIMATION_END_SPEED}\r\n        animate={props.open}\r\n      />\r\n      <BottomBar\r\n        speed={ANIMATION_SPEED}\r\n        delay={ANIMATION_DELAY}\r\n        endSpeed={ANIMATION_END_SPEED}\r\n        animate={props.open}\r\n      />\r\n      <Canvas\r\n        speed={ANIMATION_SPEED}\r\n        delay={ANIMATION_DELAY}\r\n        endSpeed={ANIMATION_END_SPEED}\r\n        animate={props.open}\r\n      >\r\n        {props.children}\r\n      </Canvas>\r\n      <BackDrop animate={props.open} onClick={props.handleOpen} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default withRouter(Frame);\r\n\r\nconst Layout = styled.div``;\r\n\r\nconst TopBar = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: ${p => (p.animate ? \"100px\" : \"30px\")};\r\n  width: 100%\r\n  background-color: ${p => p.theme.frame.primary};\r\n  transition: ${p =>\r\n    p.animate\r\n      ? \"height \" + p.speed + \" \" + p.delay + \" cubic-bezier(1, 0, 0, 1)\"\r\n      : \"height \" + p.endSpeed + \" cubic-bezier(1, 0, 0, 1)\"};\r\n  z-index: 4;\r\n  `;\r\n\r\nconst RightBar = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  width: ${p => (p.animate ? \"100px\" : \"30px\")};\r\n  background-color: ${p => p.theme.frame.primary};\r\n  transition: ${p =>\r\n    p.animate\r\n      ? \"width \" + p.speed + \" \" + p.delay + \" cubic-bezier(1, 0, 0, 1)\"\r\n      : \"width \" + p.endSpeed + \" cubic-bezier(1, 0, 0, 1)\"};\r\n  z-index: 4;\r\n`;\r\n\r\nconst BottomBar = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n  height: ${p => (p.animate ? \"100px\" : \"30px\")};\r\n  transition: ${p =>\r\n    p.animate\r\n      ? \"height \" + p.speed + \" \" + p.delay + \" cubic-bezier(1, 0, 0, 1)\"\r\n      : \"height \" + p.endSpeed + \" cubic-bezier(1, 0, 0, 1)\"};\r\n  width: 100%;\r\n  background-color: ${p => p.theme.frame.primary};\r\n  z-index: 4;\r\n`;\r\nconst Canvas = styled.div`\r\n  position: absolute;\r\n  background-color: ${p => p.theme.base.primary};\r\n  top: 30px;\r\n  left: 30px;\r\n  height: calc(100% - 60px);\r\n  width: calc(100% - 60px);\r\n  z-index: 1;\r\n  transition: ${p =>\r\n    \"background-color \" +\r\n    p.speed +\r\n    \" \" +\r\n    p.delay +\r\n    \" cubic-bezier(1, 0, 0, 1)\"};\r\n`;\r\n// ${p => (p.animate ? p.speed + \" \" + p.delay : p.endSpeed)} \" cubic-bezier(1, 0, 0, 1)\";\r\n\r\nconst BackDrop = styled.div`\r\n  position: absolute;\r\n  display: ${p => (p.animate ? \"border-box\" : \"none\")}\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  z-index: 2;\r\n`;\r\n\r\nconst sectionHelper = section => {\r\n  switch (section) {\r\n    case \"/experience\":\r\n      return \"experience\";\r\n    case \"/projects\":\r\n      return \"projects\";\r\n    default:\r\n      return \"about\";\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst About = () => {\r\n  return <Container>About</Container>;\r\n};\r\n\r\nexport default About;\r\n\r\nconst Container = styled.div`\r\n  height: auto;\r\n  padding: 2em;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Experience = () => {\r\n  return <Container>Experience</Container>;\r\n};\r\n\r\nexport default Experience;\r\n\r\nconst Container = styled.div`\r\n  height: auto;\r\n  padding: 2em;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Projects = () => {\r\n  return <Container>Projects</Container>;\r\n};\r\n\r\nexport default Projects;\r\n\r\nconst Container = styled.div`\r\n  height: auto;\r\n  padding: 2em;\r\n`;\r\n","import React, { useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Frame from \"./Frame/Frame\";\nimport About from \"./About/About\";\nimport Experience from \"./Experience/Experience\";\nimport Projects from \"./Projects/Projects\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faBars } from \"@fortawesome/pro-light-svg-icons\";\n\nlibrary.add(faBars);\n\nconst App = () => {\n  const [open, setOpen] = useState(false);\n  return (\n    <Layout>\n      <Frame open={open} handleOpen={() => setOpen(!open)}>\n        <Route exact path=\"/\" component={About} />\n        <Route path=\"/experience\" component={Experience} />\n        <Route path=\"/projects\" component={Projects} />\n      </Frame>\n    </Layout>\n  );\n};\n\nexport default App;\n\nconst Layout = styled.div`\n  height: 100vh;\n  width: 100vw;\n  color: ${p => p.theme.font};\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\n\n// const theme = {\n//   about: { primary: \"#2f3247\", secondary: \"#956ee5\", frame: \"#2b2e43\" },\n//   experience: { primary: \"#f3c130\", secondary: \"#f8f8f8\", frame: \"white\" },\n//   projects: { primary: \"#414a6b\", secondary: \"#f8f8f8\", frame: \"white\" }\n// };\nconst theme = {\n  about: { primary: \"#4c61ee\", secondary: \"#ff5851\" },\n  experience: { primary: \"#4c61ee\", secondary: \"#f8f8f8\" },\n  projects: { primary: \"#4c61ee\", secondary: \"#f8f8f8\" },\n  frame: { primary: \"#1f2031\" },\n  base: { primary: \"#1d1e2f\" },\n  font: \"white\"\n};\n// frame: { primary: \"#292c40\" },\n\nconst portfolio = {\n  name: \"rob\"\n};\n\nexport const PortfolioContext = React.createContext(portfolio);\n\nReactDOM.render(\n  <PortfolioContext.Provider value={portfolio}>\n    <ThemeProvider theme={theme}>\n      <Router>\n        <App />\n      </Router>\n    </ThemeProvider>\n  </PortfolioContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}